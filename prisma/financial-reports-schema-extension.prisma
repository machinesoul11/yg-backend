/**
 * Financial Analytics Reports Model Extensions
 * 
 * Additional database schema for comprehensive financial analytics reporting
 */

// Add to existing schema.prisma

// Note: This extends the existing Prisma schema
// The following models should be added to the existing schema.prisma file

model FinancialReport {
  id                String               @id @default(cuid())
  reportType        FinancialReportType
  period            Json                 // Contains startDate, endDate, frequency
  generatedAt       DateTime             @default(now()) @map("generated_at")
  generatedBy       String               @map("generated_by")
  status            ReportStatus         @default(GENERATING)
  storageKey        String?              @map("storage_key")
  metadata          Json                 @default("{}")
  scheduledReportId String?              @map("scheduled_report_id")
  createdAt         DateTime             @default(now()) @map("created_at")
  updatedAt         DateTime             @updatedAt @map("updated_at")
  
  generatedByUser   User                 @relation(fields: [generatedBy], references: [id])
  scheduledReport   ScheduledReport?     @relation(fields: [scheduledReportId], references: [id])

  @@index([reportType, generatedAt])
  @@index([generatedBy])
  @@index([status])
  @@map("financial_reports")
}

model ScheduledReport {
  id                String              @id @default(cuid())
  name              String              @db.VarChar(255)
  reportType        FinancialReportType
  frequency         ReportFrequency
  cronExpression    String              @map("cron_expression")
  recipients        Json                // Array of email addresses
  isActive          Boolean             @default(true) @map("is_active")
  lastGeneratedAt   DateTime?           @map("last_generated_at")
  nextScheduledAt   DateTime?           @map("next_scheduled_at")
  parameters        Json                @default("{}") // Report-specific parameters
  createdBy         String              @map("created_by")
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")
  
  createdByUser     User                @relation(fields: [createdBy], references: [id])
  reports           FinancialReport[]

  @@index([isActive, nextScheduledAt])
  @@index([reportType])
  @@map("scheduled_reports")
}

model ReportDownload {
  id          String   @id @default(cuid())
  reportId    String   @map("report_id")
  userId      String   @map("user_id")
  downloadUrl String   @map("download_url")
  expiresAt   DateTime @map("expires_at")
  downloadedAt DateTime? @map("downloaded_at")
  ipAddress   String?  @map("ip_address")
  userAgent   String?  @map("user_agent")
  createdAt   DateTime @default(now()) @map("created_at")
  
  report      FinancialReport @relation(fields: [reportId], references: [id], onDelete: Cascade)
  user        User            @relation(fields: [userId], references: [id])

  @@index([reportId])
  @@index([userId])
  @@index([expiresAt])
  @@map("report_downloads")
}

model CashFlowProjection {
  id                    String   @id @default(cuid())
  projectionDate        DateTime @map("projection_date") @db.Date
  projectedInflowCents  Int      @map("projected_inflow_cents")
  projectedOutflowCents Int      @map("projected_outflow_cents")
  netCashFlowCents      Int      @map("net_cash_flow_cents")
  confidenceLevel       Decimal  @map("confidence_level") @db.Decimal(3, 2)
  basedOnDays          Int      @map("based_on_days")
  methodology          String   @db.VarChar(50)
  createdAt            DateTime @default(now()) @map("created_at")

  @@unique([projectionDate])
  @@index([projectionDate])
  @@map("cash_flow_projections")
}

model AccountsReceivableAging {
  id                    String   @id @default(cuid())
  snapshotDate          DateTime @map("snapshot_date") @db.Date
  entityType            String   @map("entity_type") @db.VarChar(50) // 'license', 'payment', 'invoice'
  entityId              String   @map("entity_id")
  brandId               String?  @map("brand_id")
  originalAmountCents   Int      @map("original_amount_cents")
  outstandingAmountCents Int     @map("outstanding_amount_cents")
  daysOutstanding       Int      @map("days_outstanding")
  agingBucket           AgingBucket @map("aging_bucket")
  riskLevel             RiskLevel
  invoiceDate           DateTime @map("invoice_date") @db.Date
  dueDate               DateTime @map("due_date") @db.Date
  metadata              Json     @default("{}")
  createdAt             DateTime @default(now()) @map("created_at")
  
  brand                 Brand?   @relation(fields: [brandId], references: [id])

  @@index([snapshotDate, agingBucket])
  @@index([brandId])
  @@index([daysOutstanding])
  @@map("accounts_receivable_aging")
}

model AccountsPayableEntry {
  id                  String      @id @default(cuid())
  creatorId           String      @map("creator_id")
  royaltyStatementId  String?     @map("royalty_statement_id")
  payoutId            String?     @map("payout_id")
  amountOwedCents     Int         @map("amount_owed_cents")
  dueDate             DateTime    @map("due_date") @db.Date
  status              PayableStatus @default(PENDING)
  paymentTerms        String?     @map("payment_terms")
  priority            PayablePriority @default(NORMAL)
  createdAt           DateTime    @default(now()) @map("created_at")
  paidAt              DateTime?   @map("paid_at")
  
  creator             Creator     @relation(fields: [creatorId], references: [id])
  royaltyStatement    RoyaltyStatement? @relation(fields: [royaltyStatementId], references: [id])
  payout              Payout?     @relation(fields: [payoutId], references: [id])

  @@index([creatorId, status])
  @@index([dueDate, status])
  @@index([priority])
  @@map("accounts_payable_entries")
}

model CommissionTracking {
  id                    String             @id @default(cuid())
  transactionId         String             @map("transaction_id")
  transactionType       CommissionTransactionType @map("transaction_type")
  licenseId             String?            @map("license_id")
  paymentId             String?            @map("payment_id")
  grossAmountCents      Int                @map("gross_amount_cents")
  commissionRateBps     Int                @map("commission_rate_bps")
  commissionAmountCents Int                @map("commission_amount_cents")
  netAmountCents        Int                @map("net_amount_cents")
  commissionCategory    CommissionCategory
  createdAt             DateTime           @default(now()) @map("created_at")
  recognizedAt          DateTime?          @map("recognized_at")
  
  license               License?           @relation(fields: [licenseId], references: [id])
  payment               Payment?           @relation(fields: [paymentId], references: [id])

  @@index([transactionType, createdAt])
  @@index([commissionCategory])
  @@index([licenseId])
  @@map("commission_tracking")
}

// Enum additions
enum FinancialReportType {
  MONTHLY_REVENUE
  QUARTERLY_SUMMARY
  ANNUAL_STATEMENT
  CASH_FLOW_ANALYSIS
  ACCOUNTS_RECEIVABLE_AGING
  ACCOUNTS_PAYABLE
  COMMISSION_TRACKING
  CUSTOM
}

enum ReportStatus {
  GENERATING
  COMPLETED
  FAILED
  ARCHIVED
}

enum ReportFrequency {
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  ANNUALLY
}

enum AgingBucket {
  CURRENT        // 0-30 days
  DAYS_31_60     // 31-60 days
  DAYS_61_90     // 61-90 days
  OVER_90        // 90+ days
}

enum RiskLevel {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum PayableStatus {
  PENDING
  APPROVED
  PROCESSING
  PAID
  OVERDUE
  DISPUTED
}

enum PayablePriority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum CommissionTransactionType {
  LICENSE_FEE
  REVENUE_SHARE
  PLATFORM_FEE
  TRANSACTION_FEE
  LATE_FEE
  OTHER
}

enum CommissionCategory {
  PLATFORM_COMMISSION
  PAYMENT_PROCESSING
  CURRENCY_CONVERSION
  DISPUTE_FEE
  SERVICE_FEE
}

// Additional relations to add to existing models:
// Add to User model:
// financialReports     FinancialReport[]
// scheduledReports     ScheduledReport[]
// reportDownloads      ReportDownload[]

// Add to Brand model:
// receivableAging      AccountsReceivableAging[]

// Add to Creator model:
// payableEntries       AccountsPayableEntry[]

// Add to License model:
// commissionTracking   CommissionTracking[]

// Add to Payment model:
// commissionTracking   CommissionTracking[]

// Add to RoyaltyStatement model:
// payableEntries       AccountsPayableEntry[]

// Add to Payout model:
// payableEntries       AccountsPayableEntry[]
